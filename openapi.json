{
    "openapi": "3.1.0",
    "paths": {
      "/v2/generate": {
        "post": {
          "operationId": "GenerateController_createGeneration",
          "parameters": [],
          "requestBody": {
            "required": true,
            "description": "Input for creating generation job",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateGenerationDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Job created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Generation"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request - Invalid input or unsupported model",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GenerationError"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized - Invalid or missing authentication",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GenerationError"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error - Failed to create generation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GenerationError"
                  }
                }
              }
            }
          },
          "tags": [
            "Generate"
          ]
        }
      },
      "/v2/generate/{id}": {
        "get": {
          "operationId": "GenerateController_getGeneration",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "Job ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Job status retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Generation"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized - Invalid or missing authentication",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GenerationError"
                  }
                }
              }
            },
            "404": {
              "description": "Job not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GenerationError"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GenerationError"
                  }
                }
              }
            }
          },
          "tags": [
            "Generate"
          ]
        }
      },
      "/v2/generations": {
        "get": {
          "operationId": "GenerateController_getGenerations",
          "parameters": [
            {
              "name": "status",
              "required": false,
              "in": "query",
              "description": "Filter generations by status",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Generations retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Generation"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized - Invalid or missing authentication",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GenerationError"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GenerationError"
                  }
                }
              }
            }
          },
          "tags": [
            "Generate"
          ]
        }
      },
      "/v2/analyze/cost": {
        "post": {
          "operationId": "AnalyzeController_getCostEstimate",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateGenerationDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Generations retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EstimatedGenerationCost"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized - Invalid or missing authentication",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GenerationError"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GenerationError"
                  }
                }
              }
            }
          },
          "tags": [
            "Analyze"
          ]
        }
      }
    },
    "info": {
      "title": "sync.api-v2",
      "description": "a unified API to edit humans in any video in any way. powered by sync.labs",
      "version": "1.0",
      "contact": {
  
      }
    },
    "tags": [],
    "servers": [],
    "components": {
      "securitySchemes": {
        "apiKey": {
          "type": "apiKey",
          "in": "header",
          "name": "x-api-key"
        }
      },
      "schemas": {
        "Generation": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "A unique identifier for the generation."
            },
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "description": "The date and time the generation was created."
            },
            "status": {
              "type": "string",
              "description": "The status of the generation.",
              "enum": [
                "PENDING",
                "PROCESSING",
                "COMPLETED",
                "FAILED",
                "REJECTED",
                "CANCELED",
                "TIMED_OUT"
              ]
            },
            "model": {
              "type": "string",
              "description": "The name of the model used for generation."
            },
            "input": {
              "type": "array",
              "description": "An array of input objects containing type and URL.",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                }
              }
            },
            "webhookUrl": {
              "type": "object",
              "description": "The URL to the webhook endpoint."
            },
            "options": {
              "type": "object",
              "description": "Options for the generation."
            },
            "outputUrl": {
              "type": "object",
              "description": "The URL of the output media."
            },
            "outputDuration": {
              "type": "object",
              "description": "The duration of the output media."
            },
            "error": {
              "type": "string",
              "description": "The error message if the generation failed."
            }
          },
          "required": [
            "id",
            "createdAt",
            "status",
            "model",
            "input"
          ]
        },
        "ProviderItem": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "elevenlabs"
            },
            "voiceId": {
              "type": "string",
              "example": "voice123"
            },
            "script": {
              "type": "string",
              "example": "make some magic"
            }
          },
          "required": [
            "name",
            "voiceId",
            "script"
          ]
        },
        "InputItem": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "video",
                "audio",
                "text"
              ],
              "example": "video"
            },
            "segments_secs": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 2
              },
              "example": [
                [5, 10]
              ],
              "description": "Start and end time in seconds for each video segment to apply generation to"
            },
            "segments_frames": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 2
              },
              "example": [
                [0, 25]
              ],
              "description": "Start and end frames for each video segment to apply generation to"
            },
            "url": {
              "type": "string",
              "example": "https://synchlabs-public.s3.us-west-2.amazonaws.com/david_demo_shortvid-03a10044-7741-4cfc-816a-5bccd392d1ee.mp4"
            },
            "provider": {
              "description": "Integration provider",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ProviderItem"
                }
              ]
            }
          },
          "required": [
            "type"
          ]
        },
        "GenerationOptions": {
          "type": "object",
          "example": {
            "output_format": "mp4",
            "output_resolution": [1280, 720]
          },
          "properties": {
            "pads": {
              "example": [0, 5, 0, 0],
              "description": "Padding values",
              "default": [0, 5, 0, 0],
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            "speedup": {
              "type": "number",
              "enum": [1, 2, 3, 4],
              "example": 1,
              "description": "downscale inputs for faster generations. useful to preview changes."
            },
            "output_format": {
              "type": "string",
              "enum": [
                "mp4",
                "mov"
              ],
              "example": "mp4",
              "description": "output format of the generated video",
              "default": "mp4"
            },
            "sync_mode": {
              "type": "string",
              "enum": [
                "loop",
                "bounce",
                "cut_off",
                "silence",
                "remap"
              ],
              "example": "bounce",
              "description": "lipsync mode when audio and video durations are out of sync.",
              "default": "loop"
            },
            "fps": {
              "type": "number",
              "example": 25,
              "description": "Frames per second (FPS) for the output video"
            },
            "output_resolution": {
              "example": [1280, 720],
              "description": "Resolution of the output video [width, height]",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "VideoInput": {
          "title": "Video Input",
          "type": "object",
          "required": ["type", "url"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["video"],
              "default": "video"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "URL to the video file",
              "example": "https://synchlabs-public.s3.us-west-2.amazonaws.com/david_demo_shortvid-03a10044-7741-4cfc-816a-5bccd392d1ee.mp4"
            },
            "segments_secs": {
              "type": "array",
              "items": {
                "type": "array",
                "items": { "type": "number" },
                "minItems": 2,
                "maxItems": 2
              },
              "description": "Optional: Start and end time in seconds for each video segment",
              "example": [[5, 10]]
            },
            "segments_frames": {
              "type": "array",
              "items": {
                "type": "array",
                "items": { "type": "number" },
                "minItems": 2,
                "maxItems": 2
              },
              "description": "Optional: Start and end frames for each video segment",
              "example": [[0, 25]]
            }
          }
        },
        "AudioInput": {
          "title": "Audio Input",
          "type": "object",
          "required": ["type", "url"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["audio"],
              "default": "audio"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "URL to the audio file",
              "example": "https://synchlabs-public.s3.us-west-2.amazonaws.com/david_demo_shortaud-27623a4f-edab-4c6a-8383-871b18961a4a.wav"
            }
          }
        },
        "TextInput": {
          "title": "Text Input",
          "type": "object",
          "required": ["type", "provider"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["text"],
              "default": "text"
            },
            "provider": {
              "type": "object",
              "required": ["name", "voiceId", "script"],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "elevenlabs",
                  "description": "Name of the text-to-speech provider"
                },
                "voiceId": {
                  "type": "string",
                  "example": "voice123",
                  "description": "ID of the voice to use"
                },
                "script": {
                  "type": "string",
                  "example": "make some magic",
                  "description": "Text to convert to speech"
                }
              }
            }
          }
        },
        "CreateGenerationDto": {
          "type": "object",
          "required": ["model", "input"],
          "properties": {
            "model": {
              "type": "string",
              "description": "name of the model to use for generation.",
              "enum": [
                "lipsync-1.9.0-beta",
                "lipsync-1.8.0",
                "lipsync-1.7.1",
                "lipsync-1.6.0"
              ],
              "example": "lipsync-1.9.0-beta"
            },
            "input": {
              "type": "array",
              "description": "Array of input objects. Must include one video input and either an audio or text input.",
              "example": [
                {
                    "type": "video",
                    "url": "https://synchlabs-public.s3.us-west-2.amazonaws.com/david_demo_shortvid-03a10044-7741-4cfc-816a-5bccd392d1ee.mp4"
                },
                {
                    "type": "audio",
                    "url": "https://synchlabs-public.s3.us-west-2.amazonaws.com/david_demo_shortaud-27623a4f-edab-4c6a-8383-871b18961a4a.wav"
                }
              ],
              "minItems": 2,
              "maxItems": 2,
              "items": {
                "oneOf": [
                  { "$ref": "#/components/schemas/VideoInput" },
                  { "$ref": "#/components/schemas/AudioInput" },
                  { "$ref": "#/components/schemas/TextInput" }
                ]
              }
            },
            "options": {
              "description": "additional options available for generation.",
              "allOf": [
                {
                  "$ref": "#/components/schemas/GenerationOptions"
                }
              ]
            },
            "webhookUrl": {
              "type": "string",
              "description": "webhook url for generation status updates. webhook server will be notified once the generation completes.",
              "example": "https://your-server.com/webhook"
            }
          }
        },
        "GenerationError": {
          "type": "object",
          "properties": {
            "message": {
              "description": "A message describing the error.",
              "example": "An error occurred during generation",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "error": {
              "type": "string",
              "description": "The type of error that occurred."
            },
            "statusCode": {
              "type": "number",
              "description": "The type of error that occurred."
            }
          },
          "required": [
            "message",
            "error",
            "statusCode"
          ]
        },
        "EstimatedGenerationCost": {
          "type": "object",
          "properties": {
            "estimatedFrameCount": {
              "type": "number",
              "description": "The estimated frame count for the generation."
            },
            "estimatedGenerationCost": {
              "type": "number",
              "description": "The estimated cost of the generation in USD."
            }
          },
          "required": [
            "estimatedFrameCount",
            "estimatedGenerationCost"
          ]
        }
      }
    },
    "security": [
      {
        "apiKey": []
      }
    ]
  }
